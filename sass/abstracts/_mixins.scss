// the mixin is used so we dont have to write the same code all over again
// It works a function that you can in the code in different locations
@mixin clearfix {
    &::after {
        content: "";
        display: table;
        clear: both;
    }
}

@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// MEDIA QUERY MANAGER
/*
0 - 600PX:  Phone
600 - 900px:    Tablet portrait
900 - 1200px:   Tablet landscape
[1200 - 1800] is where our normal styles apply
1800px + : Big desktop

Note: "@content" allows to pass a block of code into a mixin

$breakpoint argument choices
- phone 
- tab-port
- tab-land
- big-desktop

Note: 1em = 16px;
for instance: 600 / 16 = 37.7

ORDER: Base + typography > general layout + grid > page layout > components
*/

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media (max-width: 37.7em) { @content }; // 600px
    }

    @if $breakpoint == tab-port {
        @media (max-width: 56.25em) { @content }; // 900px
    }

    @if $breakpoint == tab-land {
        @media (max-width: 75em) { @content }; // 1200px
    }

    @if $breakpoint == big-desktop {
        @media (min-width: 112.5em) { @content }; // 1800px 
    }
}
